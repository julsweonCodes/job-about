generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model users {
  id                     BigInt                @id @default(autoincrement())
  user_id                String                @unique @db.VarChar(255)
  name                   String                @db.VarChar(100)
  phone_number           String?               @db.VarChar(20)
  email                  String                @unique @db.VarChar(255)
  img_url                String?               @db.VarChar(2048)
  role                   Role?
  personality_profile_id BigInt?
  created_at             DateTime              @default(now()) @db.Timestamptz(6)
  deleted_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime              @db.Timestamptz(6)
  description            String?
  applicant_profiles     applicant_profiles[]
  bookmarked_jobs        bookmarked_jobs[]
  business_locs          business_loc[]
  job_posts              job_posts[]
  user_responses         user_responses[]
  personality_profile    personality_profiles? @relation(fields: [personality_profile_id], references: [id])
}

model business_loc {
  id              BigInt        @id @default(autoincrement())
  user_id         BigInt
  name            String        @db.VarChar(100)
  phone_number    String        @db.VarChar(20)
  address         String        @db.VarChar(255)
  operating_start String        @db.VarChar(20)
  operating_end   String        @db.VarChar(20)
  logo_url        String?       @db.VarChar(2048)
  img_url1        String?       @db.VarChar(2048)
  img_url2        String?       @db.VarChar(2048)
  img_url3        String?       @db.VarChar(2048)
  img_url4        String?       @db.VarChar(2048)
  img_url5        String?       @db.VarChar(2048)
  language_level  LanguageLevel
  description     String
  created_at      DateTime      @default(now()) @db.Timestamptz(6)
  deleted_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime      @default(now()) @db.Timestamptz(6)
  user            users         @relation(fields: [user_id], references: [id])
  job_posts       job_posts[]
}

model applicant_profiles {
  id                                          BigInt             @id @default(autoincrement())
  user_id                                     BigInt
  job_type1                                   JobType
  job_type2                                   JobType?
  job_type3                                   JobType?
  work_type                                   WorkType
  available_day                               AvailableDay
  available_hour                              AvailableHour
  location                                    Location
  language_level                              LanguageLevel
  description                                 String
  created_at                                  DateTime           @default(now()) @db.Timestamptz(6)
  deleted_at                                  DateTime?          @db.Timestamptz(6)
  updated_at                                  DateTime           @default(now()) @db.Timestamptz(6)
  skill_id1                                   BigInt
  skill_id2                                   BigInt?
  skill_id3                                   BigInt?
  skills_applicant_profiles_skill_id1Toskills skills             @relation("applicant_profiles_skill_id1Toskills", fields: [skill_id1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  skills_applicant_profiles_skill_id2Toskills skills?            @relation("applicant_profiles_skill_id2Toskills", fields: [skill_id2], references: [id], onDelete: NoAction, onUpdate: NoAction)
  skills_applicant_profiles_skill_id3Toskills skills?            @relation("applicant_profiles_skill_id3Toskills", fields: [skill_id3], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                                        users              @relation(fields: [user_id], references: [id])
  applications                                applications[]
  profile_skills                              profile_skills[]
  work_experiences                            work_experiences[]
}

model work_experiences {
  id           BigInt             @id @default(autoincrement())
  profile_id   BigInt
  company_name String             @db.VarChar(100)
  job_type     JobType
  start_date   DateTime           @db.Timestamptz(6)
  end_date     DateTime?          @db.Timestamptz(6)
  work_type    WorkType
  description  String
  created_at   DateTime           @default(now()) @db.Timestamptz(6)
  deleted_at   DateTime?          @db.Timestamptz(6)
  updated_at   DateTime           @db.Timestamptz(6)
  profile      applicant_profiles @relation(fields: [profile_id], references: [id])
}

model skills {
  id                                                      BigInt               @id @default(autoincrement())
  name                                                    String               @unique @db.VarChar(50)
  created_at                                              DateTime             @default(now()) @db.Timestamptz(6)
  deleted_at                                              DateTime?            @db.Timestamptz(6)
  updated_at                                              DateTime             @default(now()) @db.Timestamptz(6)
  applicant_profiles_applicant_profiles_skill_id1Toskills applicant_profiles[] @relation("applicant_profiles_skill_id1Toskills")
  applicant_profiles_applicant_profiles_skill_id2Toskills applicant_profiles[] @relation("applicant_profiles_skill_id2Toskills")
  applicant_profiles_applicant_profiles_skill_id3Toskills applicant_profiles[] @relation("applicant_profiles_skill_id3Toskills")
  job_post_skills                                         job_post_skills[]
  job_posts_job_posts_skill_id1Toskills                   job_posts[]          @relation("job_posts_skill_id1Toskills")
  job_posts_job_posts_skill_id2Toskills                   job_posts[]          @relation("job_posts_skill_id2Toskills")
  job_posts_job_posts_skill_id3Toskills                   job_posts[]          @relation("job_posts_skill_id3Toskills")
  profile_skills                                          profile_skills[]
}

model profile_skills {
  profile_id BigInt
  skill_id   BigInt
  profile    applicant_profiles @relation(fields: [profile_id], references: [id])
  skill      skills             @relation(fields: [skill_id], references: [id])

  @@id([profile_id, skill_id])
}

model job_posts {
  id                                 BigInt                        @id @default(autoincrement())
  business_loc_id                    BigInt
  user_id                            BigInt
  title                              String                        @db.VarChar(100)
  job_type                           JobType
  deadline                           String                        @db.VarChar(8)
  work_schedule                      String                        @db.VarChar(100)
  wage                               String
  description                        String
  status                             JobStatus
  created_at                         DateTime                      @default(now()) @db.Timestamptz(6)
  deleted_at                         DateTime?                     @db.Timestamptz(6)
  updated_at                         DateTime                      @default(now()) @db.Timestamptz(6)
  skill_id1                          BigInt
  skill_id2                          BigInt?
  skill_id3                          BigInt?
  applications                       applications[]
  bookmarked_jobs                    bookmarked_jobs[]
  preferred_profiles                 job_post_preferred_profiles[]
  job_post_skills                    job_post_skills[]
  business_loc                       business_loc                  @relation(fields: [business_loc_id], references: [id])
  skills_job_posts_skill_id1Toskills skills                        @relation("job_posts_skill_id1Toskills", fields: [skill_id1], references: [id], onDelete: NoAction, onUpdate: NoAction)
  skills_job_posts_skill_id2Toskills skills?                       @relation("job_posts_skill_id2Toskills", fields: [skill_id2], references: [id], onDelete: NoAction, onUpdate: NoAction)
  skills_job_posts_skill_id3Toskills skills?                       @relation("job_posts_skill_id3Toskills", fields: [skill_id3], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                               users                         @relation(fields: [user_id], references: [id])
}

model job_post_skills {
  job_post_id BigInt
  skill_id    BigInt
  job_post    job_posts @relation(fields: [job_post_id], references: [id])
  skill       skills    @relation(fields: [skill_id], references: [id])

  @@id([job_post_id, skill_id])
}

model applications {
  id          BigInt             @id @default(autoincrement())
  job_post_id BigInt
  profile_id  BigInt
  status      ApplicationStatus
  created_at  DateTime           @default(now()) @db.Timestamptz(6)
  deleted_at  DateTime?          @db.Timestamptz(6)
  updated_at  DateTime           @db.Timestamptz(6)
  job_post    job_posts          @relation(fields: [job_post_id], references: [id])
  profile     applicant_profiles @relation(fields: [profile_id], references: [id])
}

model bookmarked_jobs {
  id          BigInt    @id @default(autoincrement())
  user_id     BigInt
  job_post_id BigInt
  job_post    job_posts @relation(fields: [job_post_id], references: [id])
  user        users     @relation(fields: [user_id], references: [id])

  @@unique([user_id, job_post_id])
}

model personality_profiles {
  id                 BigInt                        @id @default(autoincrement())
  name_ko            String
  name_en            String
  description_ko     String
  description_en     String
  created_at         DateTime                      @default(now()) @db.Timestamptz(6)
  updated_at         DateTime                      @db.Timestamptz(6)
  preferred_for_jobs job_post_preferred_profiles[]
  users              users[]
}

model job_post_preferred_profiles {
  job_post_id BigInt
  profile_id  BigInt
  job_post    job_posts            @relation(fields: [job_post_id], references: [id])
  profile     personality_profiles @relation(fields: [profile_id], references: [id])

  @@id([job_post_id, profile_id])
}

model dimensions {
  id             BigInt           @id @default(autoincrement())
  name           String           @unique @db.VarChar(255)
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  updated_at     DateTime         @default(now()) @db.Timestamptz(6)
  quiz_questions quiz_questions[]
}

model quiz_questions {
  id            BigInt         @id @default(autoincrement())
  question_code String         @unique @db.VarChar(10)
  dimension_id  BigInt
  content_ko    String
  content_en    String
  quiz_set_id   String         @db.Char(1)
  created_at    DateTime       @default(now()) @db.Timestamptz(6)
  choices       quiz_choices[]
  dimension     dimensions     @relation(fields: [dimension_id], references: [id])
}

model quiz_choices {
  id             BigInt           @id @default(autoincrement())
  question_id    BigInt
  label          QuizLabel
  content_ko     String
  content_en     String
  created_at     DateTime         @default(now()) @db.Timestamptz(6)
  question       quiz_questions   @relation(fields: [question_id], references: [id])
  user_responses user_responses[]
}

model user_responses {
  id         BigInt       @id @default(autoincrement())
  user_id    BigInt
  choice_id  BigInt
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  choice     quiz_choices @relation(fields: [choice_id], references: [id])
  user       users        @relation(fields: [user_id], references: [id])
}

enum Role {
  APPLICANT
  EMPLOYER
}

enum LanguageLevel {
  BEGINNER
  INTERMEDIATE
  FLUENT
}

enum WorkType {
  REMOTE
  ON_SITE
  HYBRID
}

enum AvailableDay {
  WEEKDAYS
  WEEKENDS
}

enum AvailableHour {
  AM
  PM
}

enum Location {
  TORONTO
  NORTH_YORK
  SCARBOROUGH
  ETOBICOKE
  MISSISSAUGA
  BRAMPTON
  VAUGHAN
  RICHMOND_HILL
  MARKHAM
  THORNHILL
  PICKERING
  AJAX
  WHITBY
  OSHAWA
  OAKVILLE
  BURLINGTON
  MILTON
  NEWHAMBURG
}

enum JobType {
  SERVER
  KITCHEN
  DELIVERY
  CASHIER
  CLEANING
  CUSTOMER_SERVICE
  SALES
  DRIVER
  RECEPTIONIST
  SECURITY
  MANAGER
  BARISTA
  CHEF
  STOCKER
  TECH_SUPPORT
  WAREHOUSE
  ACCOUNTANT
  MARKETING
  HR
  DESIGNER
  DEVELOPER
  ENGINEER
  TEACHER
  TRANSLATOR
  PHARMACIST
  NURSE
  DOCTOR
  FARMER
  ELECTRICIAN
  PLUMBER
  JANITOR
}

enum JobStatus {
  DRAFT
  PUBLISHED
  CLOSED
}

enum ApplicationStatus {
  APPLIED
  IN_REVIEW
  REJECTED
  WITHDRAWN
  HIRED
}

enum QuizLabel {
  A
  B
}
